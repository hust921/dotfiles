#!/bin/bash
# Check git status is clean and remove all unwanted files
if [[ "$(git status --short)" != "" ]]; then
    echo "==============================================================================="
    echo -e "\e[30;41m ======= Please reset, commit or stash before continuing =======\e[0m"
    echo -e "\e[30;41m ======= Tip: PULL before you rename                     =======\e[0m"
    echo "==============================================================================="
    exit 1
fi

# Handle Arguments
if [[ $# != 2 ]]; then
    echo ""
    echo -e "\e[30;41m Wrong number of arguments.\e[0m"
    echo -e "\tUsage: $0 \"<wordToRename>\" \"<wordReplacement>\" \e[0m"
    echo ""
    exit 2
fi

# git cleaning before move
git clean -xdf
git clean -Xdf

# Find all "human files"

# Rename inside files
## Find all files ending in: .cs, .csproj, .sql, .sqlproj, .sln, .config
## Which is NOT in the .git directory.
## Iterate files, foreach: Replace all occurrences of $1 with $2 in all the files
## Save stdout, stderr to $intLog
internalRenaming=$(find . \( -not -path '*/\.git/*' -iname '*.cs' -or -iname '*.csproj' -or -iname '*.sql' -or -iname '*.sqlproj' -or -iname '*.sln' -or -iname '*.config' \))
intLog=$(mktemp "/tmp/mvsolution-XXXXXXX.txt")
for filename in $internalRenaming; do
    sed -i "s/$1/$2/g" "$filename" &> "$intLog"
done
echo "Internal rename log: $intLog"

# Rename files (and directories)
## Find all files and/or directories containing the word $1
## in DFS-order, excluding the .git directory.
## Iterate files, foreach: Replace (LAST) occurrence of the word $1 with $1
##   in full path. As no not rename parent directory, before last.
## Save stdout, stderr to $extLog
##
## eg, rename in the following order:
##    /longpath/originalWord/originalWordRepo/originalWord.cs
##    /longpath/originalWord/originalWordRepo
##    /longpath/originalWord/originalWord.cs
##    /longpath/originalWord
##
externalRenaming=$(find . -depth -type f,d |grep -viP "(^.git|^\./\.git|^\.$)" |grep "/[^/]*$1[^/]*$")
extLog=$(mktemp "/tmp/mvsolution-XXXXXXX.txt")
for filename in $externalRenaming; do
    newfile="$(echo ${filename} | sed -e "s/\(.*\)${1}\(.*\)/\1${2}\2/g")"
    mv "${filename}" "${newfile}" &> "$extLog"
done
echo "External rename log: $extLog"
